#ifndef KEYS_HXX
#define KEYS_HXX
#include "GLFW/glfw3.h"
#include <compare>
#include <ostream>

struct KeyCode {
  uint32_t value;
  std::strong_ordering operator<=>(const KeyCode &other);
  bool operator>(const KeyCode &other);
  bool operator<(const KeyCode &other);
  bool operator==(const KeyCode &other);
  bool operator>(KeyCode other) const;
  bool operator<(KeyCode other) const;
  bool operator==(KeyCode other) const;
};

const KeyCode RUBIKS_KEY_SPACE{GLFW_KEY_SPACE};
const KeyCode RUBIKS_KEY_APOSTROPHE{GLFW_KEY_APOSTROPHE};
const KeyCode RUBIKS_KEY_COMMA{GLFW_KEY_COMMA};
const KeyCode RUBIKS_KEY_MINUS{GLFW_KEY_MINUS};
const KeyCode RUBIKS_KEY_PERIOD{GLFW_KEY_PERIOD};
const KeyCode RUBIKS_KEY_SLASH{GLFW_KEY_SLASH};
const KeyCode RUBIKS_KEY_0{GLFW_KEY_0};
const KeyCode RUBIKS_KEY_1{GLFW_KEY_1};
const KeyCode RUBIKS_KEY_2{GLFW_KEY_2};
const KeyCode RUBIKS_KEY_3{GLFW_KEY_3};
const KeyCode RUBIKS_KEY_4{GLFW_KEY_4};
const KeyCode RUBIKS_KEY_5{GLFW_KEY_5};
const KeyCode RUBIKS_KEY_6{GLFW_KEY_6};
const KeyCode RUBIKS_KEY_7{GLFW_KEY_7};
const KeyCode RUBIKS_KEY_8{GLFW_KEY_8};
const KeyCode RUBIKS_KEY_9{GLFW_KEY_9};
const KeyCode RUBIKS_KEY_SEMICOLON{GLFW_KEY_SEMICOLON};
const KeyCode RUBIKS_KEY_EQUAL{GLFW_KEY_EQUAL};
const KeyCode RUBIKS_KEY_A{GLFW_KEY_A};
const KeyCode RUBIKS_KEY_B{GLFW_KEY_B};
const KeyCode RUBIKS_KEY_C{GLFW_KEY_C};
const KeyCode RUBIKS_KEY_D{GLFW_KEY_D};
const KeyCode RUBIKS_KEY_E{GLFW_KEY_E};
const KeyCode RUBIKS_KEY_F{GLFW_KEY_F};
const KeyCode RUBIKS_KEY_G{GLFW_KEY_G};
const KeyCode RUBIKS_KEY_H{GLFW_KEY_H};
const KeyCode RUBIKS_KEY_I{GLFW_KEY_I};
const KeyCode RUBIKS_KEY_J{GLFW_KEY_J};
const KeyCode RUBIKS_KEY_K{GLFW_KEY_K};
const KeyCode RUBIKS_KEY_L{GLFW_KEY_L};
const KeyCode RUBIKS_KEY_M{GLFW_KEY_M};
const KeyCode RUBIKS_KEY_N{GLFW_KEY_N};
const KeyCode RUBIKS_KEY_O{GLFW_KEY_O};
const KeyCode RUBIKS_KEY_P{GLFW_KEY_P};
const KeyCode RUBIKS_KEY_Q{GLFW_KEY_Q};
const KeyCode RUBIKS_KEY_R{GLFW_KEY_R};
const KeyCode RUBIKS_KEY_S{GLFW_KEY_S};
const KeyCode RUBIKS_KEY_T{GLFW_KEY_T};
const KeyCode RUBIKS_KEY_U{GLFW_KEY_U};
const KeyCode RUBIKS_KEY_V{GLFW_KEY_V};
const KeyCode RUBIKS_KEY_W{GLFW_KEY_W};
const KeyCode RUBIKS_KEY_X{GLFW_KEY_X};
const KeyCode RUBIKS_KEY_Y{GLFW_KEY_Y};
const KeyCode RUBIKS_KEY_Z{GLFW_KEY_Z};
const KeyCode RUBIKS_KEY_LEFT_BRACKET{GLFW_KEY_LEFT_BRACKET};
const KeyCode RUBIKS_KEY_BACKSLASH{GLFW_KEY_BACKSLASH};
const KeyCode RUBIKS_KEY_RIGHT_BRACKET{GLFW_KEY_RIGHT_BRACKET};
const KeyCode RUBIKS_KEY_GRAVE_ACCENT{GLFW_KEY_GRAVE_ACCENT};
const KeyCode RUBIKS_KEY_WORLD_1{GLFW_KEY_WORLD_1};
const KeyCode RUBIKS_KEY_WORLD_2{GLFW_KEY_WORLD_2};
const KeyCode RUBIKS_KEY_ESCAPE{GLFW_KEY_ESCAPE};
const KeyCode RUBIKS_KEY_ENTER{GLFW_KEY_ENTER};
const KeyCode RUBIKS_KEY_TAB{GLFW_KEY_TAB};
const KeyCode RUBIKS_KEY_BACKSPACE{GLFW_KEY_BACKSPACE};
const KeyCode RUBIKS_KEY_INSERT{GLFW_KEY_INSERT};
const KeyCode RUBIKS_KEY_DELETE{GLFW_KEY_DELETE};
const KeyCode RUBIKS_KEY_RIGHT{GLFW_KEY_RIGHT};
const KeyCode RUBIKS_KEY_LEFT{GLFW_KEY_LEFT};
const KeyCode RUBIKS_KEY_DOWN{GLFW_KEY_DOWN};
const KeyCode RUBIKS_KEY_UP{GLFW_KEY_UP};
const KeyCode RUBIKS_KEY_PAGE_UP{GLFW_KEY_PAGE_UP};
const KeyCode RUBIKS_KEY_PAGE_DOWN{GLFW_KEY_PAGE_DOWN};
const KeyCode RUBIKS_KEY_HOME{GLFW_KEY_HOME};
const KeyCode RUBIKS_KEY_END{GLFW_KEY_END};
const KeyCode RUBIKS_KEY_CAPS_LOCK{GLFW_KEY_CAPS_LOCK};
const KeyCode RUBIKS_KEY_SCROLL_LOCK{GLFW_KEY_SCROLL_LOCK};
const KeyCode RUBIKS_KEY_NUM_LOCK{GLFW_KEY_NUM_LOCK};
const KeyCode RUBIKS_KEY_PRINT_SCREEN{GLFW_KEY_PRINT_SCREEN};
const KeyCode RUBIKS_KEY_PAUSE{GLFW_KEY_PAUSE};
const KeyCode RUBIKS_KEY_F1{GLFW_KEY_F1};
const KeyCode RUBIKS_KEY_F2{GLFW_KEY_F2};
const KeyCode RUBIKS_KEY_F3{GLFW_KEY_F3};
const KeyCode RUBIKS_KEY_F4{GLFW_KEY_F4};
const KeyCode RUBIKS_KEY_F5{GLFW_KEY_F5};
const KeyCode RUBIKS_KEY_F6{GLFW_KEY_F6};
const KeyCode RUBIKS_KEY_F7{GLFW_KEY_F7};
const KeyCode RUBIKS_KEY_F8{GLFW_KEY_F8};
const KeyCode RUBIKS_KEY_F9{GLFW_KEY_F9};
const KeyCode RUBIKS_KEY_F10{GLFW_KEY_F10};
const KeyCode RUBIKS_KEY_F11{GLFW_KEY_F11};
const KeyCode RUBIKS_KEY_F12{GLFW_KEY_F12};
const KeyCode RUBIKS_KEY_F13{GLFW_KEY_F13};
const KeyCode RUBIKS_KEY_F14{GLFW_KEY_F14};
const KeyCode RUBIKS_KEY_F15{GLFW_KEY_F15};
const KeyCode RUBIKS_KEY_F16{GLFW_KEY_F16};
const KeyCode RUBIKS_KEY_F17{GLFW_KEY_F17};
const KeyCode RUBIKS_KEY_F18{GLFW_KEY_F18};
const KeyCode RUBIKS_KEY_F19{GLFW_KEY_F19};
const KeyCode RUBIKS_KEY_F20{GLFW_KEY_F20};
const KeyCode RUBIKS_KEY_F21{GLFW_KEY_F21};
const KeyCode RUBIKS_KEY_F22{GLFW_KEY_F22};
const KeyCode RUBIKS_KEY_F23{GLFW_KEY_F23};
const KeyCode RUBIKS_KEY_F24{GLFW_KEY_F24};
const KeyCode RUBIKS_KEY_F25{GLFW_KEY_F25};
const KeyCode RUBIKS_KEY_KP_0{GLFW_KEY_KP_0};
const KeyCode RUBIKS_KEY_KP_1{GLFW_KEY_KP_1};
const KeyCode RUBIKS_KEY_KP_2{GLFW_KEY_KP_2};
const KeyCode RUBIKS_KEY_KP_3{GLFW_KEY_KP_3};
const KeyCode RUBIKS_KEY_KP_4{GLFW_KEY_KP_4};
const KeyCode RUBIKS_KEY_KP_5{GLFW_KEY_KP_5};
const KeyCode RUBIKS_KEY_KP_6{GLFW_KEY_KP_6};
const KeyCode RUBIKS_KEY_KP_7{GLFW_KEY_KP_7};
const KeyCode RUBIKS_KEY_KP_8{GLFW_KEY_KP_8};
const KeyCode RUBIKS_KEY_KP_9{GLFW_KEY_KP_9};
const KeyCode RUBIKS_KEY_KP_DECIMAL{GLFW_KEY_KP_DECIMAL};
const KeyCode RUBIKS_KEY_KP_DIVIDE{GLFW_KEY_KP_DIVIDE};
const KeyCode RUBIKS_KEY_KP_MULTIPLY{GLFW_KEY_KP_MULTIPLY};
const KeyCode RUBIKS_KEY_KP_SUBTRACT{GLFW_KEY_KP_SUBTRACT};
const KeyCode RUBIKS_KEY_KP_ADD{GLFW_KEY_KP_ADD};
const KeyCode RUBIKS_KEY_KP_ENTER{GLFW_KEY_KP_ENTER};
const KeyCode RUBIKS_KEY_KP_EQUAL{GLFW_KEY_KP_EQUAL};
const KeyCode RUBIKS_KEY_LEFT_SHIFT{GLFW_KEY_LEFT_SHIFT};
const KeyCode RUBIKS_KEY_LEFT_CONTROL{GLFW_KEY_LEFT_CONTROL};
const KeyCode RUBIKS_KEY_LEFT_ALT{GLFW_KEY_LEFT_ALT};
const KeyCode RUBIKS_KEY_LEFT_SUPER{GLFW_KEY_LEFT_SUPER};
const KeyCode RUBIKS_KEY_RIGHT_SHIFT{GLFW_KEY_RIGHT_SHIFT};
const KeyCode RUBIKS_KEY_RIGHT_CONTROL{GLFW_KEY_RIGHT_CONTROL};
const KeyCode RUBIKS_KEY_RIGHT_ALT{GLFW_KEY_RIGHT_ALT};
const KeyCode RUBIKS_KEY_RIGHT_SUPER{GLFW_KEY_RIGHT_SUPER};
const KeyCode RUBIKS_KEY_MENU{GLFW_KEY_MENU};
const KeyCode RUBIKS_KEY_LAST{GLFW_KEY_LAST};

const char *keycode_str(KeyCode keycode);

std::ostream &operator<<(std::ostream &strm, KeyCode keycode);

#endif // KEYS_HXX
